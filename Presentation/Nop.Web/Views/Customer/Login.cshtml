@model LoginModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!String.IsNullOrEmpty(this.Context.Request.QueryString["returnUrl"]))
    {
        var webHelper = EngineContext.Current.Resolve<IWebHelper>();
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + HttpUtility.UrlEncode(this.Context.Request.QueryString["returnUrl"]), null);
    }
}
<section class="noo-page-heading eff">
    <div class="container">
        <div class="noo-heading-content">
            <h1 class="page-title eff">@T("Account.Login.Welcome")</h1>
            <div class="noo-page-breadcrumb eff">
                <a href="./" class="home">Home</a>/<span>@T("Account.Login.Welcome")</span>
            </div>
        </div>
    </div>
</section>
<div class="main">
    <div class="commerce commerce-account noo-shop-main">
        <div class="container">
            <div class="row">
                <div class="noo-main col-md-12">
                    <div id="customer_login">
                        @Html.Partial("_ExternalAuthentication.AssociateMessage")
                        @Html.Partial("_ExternalAuthentication.Errors")
                        <div class="col-md-6">
                            <div class="customer-blocks">
                                @if (Model.CheckoutAsGuest)
            {
                                    <div class="new-wrapper checkout-as-guest-or-register-block">
                                        <div class="title">
                                            <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                                        </div>
                                        <div class="btn-Login">
                                            <input type="button" class="button-1 checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                                            <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="new-wrapper register-block">
                                        <div class="title">
                                            <strong>@T("Account.Login.NewCustomer")</strong>
                                        </div>
                                        <div class="text">
                                            @T("Account.Login.NewCustomerText")
                                        </div>
                                        <div class="btn-Login">
                                            <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                                        </div>
                                    </div>
                                }
                                <h2>Login</h2>
                                <div class="returning-wrapper fieldset login">
                                    @using (Html.BeginForm())
                                    {
                                        var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);

                                        if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                                        {
                                            <div class="message-error">@validationSummary</div>
                                        }
                                        <div class="form-fields">
                                            @if (Model.UsernamesEnabled)
                                            {
                                                <div class="form-row form-row-wide">
                                                    @Html.LabelFor(m => m.Username, new { }, ":")
                                                    @Html.TextBoxFor(m => m.Username, new { @class = "username input-text", autofocus = "autofocus" })
                                                    @Html.ValidationMessageFor(m => m.Username)
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-row form-row-wide">
                                                    @Html.LabelFor(m => m.Email, new { }, ":")
                                                    @Html.TextBoxFor(m => m.Email, new { @class = "email input-text", autofocus = "autofocus" })
                                                    @Html.ValidationMessageFor(m => m.Email)
                                                </div>
                                            }
                                            <div class="form-row form-row-wide">
                                                @Html.LabelFor(m => m.Password, new { }, ":")
                                                @Html.PasswordFor(m => m.Password, new { @class = "password input-text" })
                                                @Html.ValidationMessageFor(m => m.Password)
                                            </div>
                                            <div class="lost_password">
                                                @Html.CheckBoxFor(m => m.RememberMe)
                                                @Html.LabelFor(m => m.RememberMe)
                                                <span class="forgot-password">
                                                    @Html.RouteLink(T("Account.Login.ForgotPassword").Text, "PasswordRecovery")
                                                </span>
                                            </div>
                                            @if (Model.DisplayCaptcha)
                                            {
                                                <div class="captcha-box">
                                                    @Html.Raw(Html.GenerateCaptcha())
                                                </div>
                                            }
                                        </div>
                                        <div class="buttons">
                                            <input class="button-1 login-button" type="submit" value="@T("Account.Login.LoginButton")" />
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
